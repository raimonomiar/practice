@model MenuModel



@{
    ViewBag.Title = "Add";
    Layout = "~/Views/Shared/_Layout.cshtml";
}




<div class="col-md-6">
    <div class="box box-info">
        <div class="box-header with-border">
            <h3 class="box-title">Menu Model</h3>
        </div>
        <!-- /.box-header -->
        <!-- form start -->

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="box-body">
                <div class="form-group">
     
                    

                    @Html.LabelFor(x => x.ParentId, new { @class = "control-label" })

                    @Html.DropDownListFor(x => x.ParentId,Model.ParentMenu,"--Select Parent Menu--" ,new { @class = "form-control select2" })

                    @Html.ValidationMessageFor(x => x.ParentId, null, new { @class = "text-red" })
                </div>
           
                <div class="form-group">
                    @Html.LabelFor(x => x.Name, new { @class = "control-label" })

                    @Html.TextBoxFor(x => x.Name,new { @class = "form-control" })

                    @Html.ValidationMessageFor(x => x.Name, null, new { @class = "text-red" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.MenuDetails, new { @class = "control-label" })

                    @Html.TextBoxFor(x => x.MenuDetails, new { @class = "form-control" })

                    @Html.ValidationMessageFor(x => x.MenuDetails, null, new { @class = "text-red" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.CssClass, new { @class = "control-label" })

                    @Html.TextBoxFor(x => x.CssClass, new { @class = "form-control" })

                    @Html.ValidationMessageFor(x => x.CssClass, null, new { @class = "text-red" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.MenuLink, new { @class = "control-label" })

                    @Html.TextBoxFor(x => x.MenuLink, new { @class = "form-control" })

                    @Html.ValidationMessageFor(x => x.MenuLink, null, new { @class = "text-red" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.Order, new { @class = "control-label" })

                    @Html.EditorFor(x => x.Order, new { htmlAttributes = new { @class = "form-control" } })

                    @Html.ValidationMessageFor(x => x.Name, null, new { @class = "text-red" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.Controller, new { @class = "control-label" })

                    @Html.TextBoxFor(x => x.Controller, new { @class = "form-control" })

                    @Html.ValidationMessageFor(x => x.Controller, null, new { @class = "text-red" })
                </div>

             
                <div class="form-group">
                    @Html.LabelFor(x => x.IsDefault, new { @class = "control-label" })

                    @Html.EditorFor(x => x.IsDefault, new { htmlAttributes = new { @class = "minimal" } })

                    @Html.ValidationMessageFor(x => x.IsDefault, null, new { @class = "text-red" })
                </div>
                

                <div class="form-group">
                    @Html.LabelFor(x => x.IsActive, new { @class = "control-label" })

                    @Html.EditorFor(x => x.IsActive, new { htmlAttributes = new { @class = "minimal" } })

                    @Html.ValidationMessageFor(x => x.Name, null, new { @class = "text-red" })
                </div>

            </div>
            <div class="box-footer">
                <a href="@Url.Action("Index","Menu")" class="btn btn-default">Cancel</a>
                <button type="submit" class="btn btn-info pull-right">Create</button>
            </div>
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}