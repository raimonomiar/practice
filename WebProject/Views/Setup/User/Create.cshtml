@model UserModel
@{
    ViewBag.Title = "Create";
}



<div class="col-md-6">
    <div class="box box-info">
        <div class="box-header with-border">
            <h3 class="box-title">User Management</h3>
        </div>
        <!-- /.box-header -->
        <!-- form start -->

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="box-body">
                <div class="form-group">
                    @Html.LabelFor(x => x.RoleId, new { @class = "control-label" })

                    @Html.DropDownListFor(x => x.RoleId,Model.dRoleList,"Choose Role --",htmlAttributes: new { @class = "form-control" })

                    @Html.ValidationMessageFor(x => x.RoleId, null, new { @class = "text-red" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.OfficeId, new { @class = "control-label" })

                    @Html.DropDownListFor(x => x.OfficeId, Model.dOfficeList, "Choose Office --", htmlAttributes: new { @class = "form-control" })

                    @Html.ValidationMessageFor(x => x.OfficeId, null, new { @class = "text-red" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(x => x.DesignationId, new { @class = "control-label" })

                    @Html.DropDownListFor(x => x.DesignationId, Model.dDesignationList, "Choose Designation --", htmlAttributes: new { @class = "form-control" })

                    @Html.ValidationMessageFor(x => x.DesignationId, null, new { @class = "text-red" })
                </div>

              <div class="form-group">
                  @Html.LabelFor(x=>x.Username, new { @class ="control-label" })

                  @Html.TextBoxFor(x=>x.Username, new {@class = "form-control" })

                  @Html.ValidationMessageFor(x => x.Username, null, new { @class = "text-red" })
                  
              </div>
              

                <div class="form-group">
                    @Html.LabelFor(x => x.LoginId, new { @class = "control-label" })

                    @Html.TextBoxFor(x => x.LoginId, new { @class = "form-control" })

                    @Html.ValidationMessageFor(x => x.LoginId, null, new { @class = "text-red" })

                </div>


                <div class="form-group">
                    @Html.LabelFor(x => x.EmailAddress, new { @class = "control-label" })

                    @Html.TextBoxFor(x => x.EmailAddress, new { @class = "form-control" })

                    @Html.ValidationMessageFor(x => x.EmailAddress, null, new { @class = "text-red" })

                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.Password, new { @class = "control-label" })

                    @Html.PasswordFor(x => x.Password, new { @class = "form-control" })

                    @Html.ValidationMessageFor(x => x.Password, null, new { @class = "text-red" })

                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.ConfirmPassword, new { @class = "control-label" })

                    @Html.PasswordFor(x => x.ConfirmPassword, new { @class = "form-control" })

                    @Html.ValidationMessageFor(x => x.ConfirmPassword, null, new { @class = "text-red" })

                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.IsActive, new { @class = "control-label" })

                    @Html.DropDownListFor(x => x.IsActive, new List<SelectListItem>() { new SelectListItem { Value = "true", Text = "Active" },new SelectListItem { Value="false",Text="Inactive" }   }, "---Choose options---", new {@class = "form-control" })

                    @Html.ValidationMessageFor(x => x.IsActive, null, new { @class = "text-red" })

                </div>


                




            </div>
            <div class="box-footer">
                <a href="@Url.Action("Index","Role")" class="btn btn-default">Cancel</a>
                <button type="submit" class="btn btn-info pull-right">Create</button>
            </div>
        }
    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}