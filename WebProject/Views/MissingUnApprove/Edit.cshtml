@model MissingUnApproveViewModel
@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";

}

<div class="row">
    <div class="col-md-12">
        <!-- Horizontal Form -->
        <div class="box box-info">
            <div class="box-header with-border">
                <h3 class="box-title">Edit</h3>
            </div>
            <!-- /.box-header -->
            <!-- form start -->
            @using (Html.BeginForm("Edit", "MissingUnApprove", FormMethod.Post, new { @class = "form-horizontal" }))
            {
                @Html.AntiForgeryToken()
                @Html.HiddenFor(x => x.MissingModel.Id)
                @Html.HiddenFor(x => x.MissingModel.OfficeId)
                @Html.HiddenFor(x => x.MissingModel.UserId)
                @Html.ValidationSummary()
                <div class="box-body">
                    @*<div class="form-group">
                            <label for="inputEmail3" class="col-sm-2 control-label">Email</label>
                            <div class="col-sm-10">
                                <input type="email" class="form-control" id="inputEmail3" placeholder="Email">
                            </div>
                        </div>
                        <div class="form-group">
                            <label for="inputPassword3" class="col-sm-2 control-label">Password</label>
                            <div class="col-sm-10">
                                <input type="password" class="form-control" id="inputPassword3" placeholder="Password">
                            </div>
                        </div>
                        <div class="form-group">
                            <div class="col-sm-offset-2 col-sm-10">
                                <div class="checkbox">
                                    <label>
                                        <input type="checkbox"> Remember me
                                    </label>
                                </div>
                            </div>
                        </div>*@
                    <h4 class="text-center">General Info</h4>
                    <hr />
                    <div class="col-md-6">

                        <div class="form-group">
                            @Html.LabelFor(x => x.MissingModel.RegistrationNumber, new { @class = "col-sm-4 control-label" })
                            <div class="col-sm-8">
                                @Html.EditorFor(x => x.MissingModel.RegistrationNumber, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            @Html.ValidationMessageFor(x => x.MissingModel.RegistrationNumber, null, new { @class = "text-red" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(x => x.MissingModel.Fname, new { @class = "col-sm-4 control-label" })
                            <div class="col-sm-8">
                                @Html.TextBoxFor(x => x.MissingModel.Fname, new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(x => x.MissingModel.Fname, null, new { @class = "text-red" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(x => x.MissingModel.Lname, new { @class = "col-sm-4 control-label" })
                            <div class="col-sm-8">
                                @Html.TextBoxFor(x => x.MissingModel.Lname, new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(x => x.MissingModel.Lname, null, new { @class = "text-red" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(x => x.MissingModel.Lname, new { @class = "col-sm-4 control-label" })
                            <div class="col-sm-8">
                                @Html.TextBoxFor(x => x.MissingModel.Lname, new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(x => x.MissingModel.Lname, null, new { @class = "text-red" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(x => x.MissingModel.Gender, new { @class = "col-sm-4 control-label" })
                            <div class="col-sm-8">
                                @Html.DropDownListFor(x => x.MissingModel.Gender, Model.GenderList, "Select Gender", new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(x => x.MissingModel.Gender, null, new { @class = "text-red" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(x => x.MissingModel.DOB, new { @class = "col-sm-4 control-label" })
                            <div class="col-sm-5">
                                @Html.TextBoxFor(x => x.MissingModel.DOB, new { @class = "form-control pull-right datepicker"})
                            </div>
                            @Html.ValidationMessageFor(x => x.MissingModel.DOB, null, new { @class = "text-red" })
                            <div class="col-sm-3">
                                @Html.EditorFor(x => x.MissingModel.EstimatedAge, new { htmlAttributes = new { @class = "form-control", placeholder = "Estimate Age" } })
                            </div>
                            @Html.ValidationMessageFor(x => x.MissingModel.EstimatedAge, null, new { @class = "text-red" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(x => x.MissingModel.MotherName, new { @class = "col-sm-4 control-label" })
                            <div class="col-sm-8">
                                @Html.TextBoxFor(x => x.MissingModel.MotherName, new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(x => x.MissingModel.MotherName, null, new { @class = "text-red" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(x => x.MissingModel.EthnicityId, new { @class = "col-sm-4 control-label" })
                            <div class="col-sm-8">
                                @Html.DropDownListFor(x => x.MissingModel.EthnicityId, Model.EthnicityList, "Select Ethnicity", new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(x => x.MissingModel.EthnicityId, null, new { @class = "text-red" })
                        </div>


                    </div>

                    <div class="col-md-6">

                        <div class="form-group">
                            @Html.LabelFor(x => x.MissingModel.FiscalYearId, new { @class = "col-sm-4 control-label" })
                            <div class="col-sm-8">
                                @Html.DropDownListFor(x => x.MissingModel.FiscalYearId, Model.FiscalYearList, "Select Year", new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(x => x.MissingModel.FiscalYearId, null, new { @class = "text-red" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(x => x.MissingModel.Alias, new { @class = "col-sm-4 control-label" })
                            <div class="col-sm-8">
                                @Html.TextBoxFor(x => x.MissingModel.Alias, new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(x => x.MissingModel.Alias, null, new { @class = "text-red" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(x => x.MissingModel.FatherName, new { @class = "col-sm-4 control-label" })
                            <div class="col-sm-8">
                                @Html.TextBoxFor(x => x.MissingModel.FatherName, new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(x => x.MissingModel.FatherName, null, new { @class = "text-red" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(x => x.MissingModel.SpouseName, new { @class = "col-sm-4 control-label" })
                            <div class="col-sm-8">
                                @Html.TextBoxFor(x => x.MissingModel.SpouseName, new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(x => x.MissingModel.SpouseName, null, new { @class = "text-red" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(x => x.MissingModel.EducationLevelId, new { @class = "col-sm-4 control-label" })
                            <div class="col-sm-8">
                                @Html.DropDownListFor(x => x.MissingModel.EducationLevelId, Model.EducationList, "Select Level", new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(x => x.MissingModel.EducationLevelId, null, new { @class = "text-red" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(x => x.MissingModel.ReligionId, new { @class = "col-sm-4 control-label" })
                            <div class="col-sm-8">
                                @Html.DropDownListFor(x => x.MissingModel.ReligionId, Model.ReligionList, "Select Religion", new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(x => x.MissingModel.ReligionId, null, new { @class = "text-red" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(x => x.MissingModel.IdTypeId, new { @class = "col-sm-4 control-label" })
                            <div class="col-sm-3">
                                @Html.DropDownListFor(x => x.MissingModel.IdTypeId, Model.IdTypeList, "Select Id Type", new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(x => x.MissingModel.MotherName, null, new { @class = "text-red" })
                            <div class="col-sm-5">
                                @Html.TextBoxFor(x => x.MissingModel.IdTypeNumber, new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(x => x.MissingModel.IdTypeNumber, null, new { @class = "text-red" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(x => x.MissingModel.Occupation, new { @class = "col-sm-4 control-label" })
                            <div class="col-sm-8">
                                @Html.TextBoxFor(x => x.MissingModel.Occupation, new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(x => x.MissingModel.Occupation, null, new { @class = "text-red" })
                        </div>

                    </div>
                    <hr class="col-md-12" />
                    <h4 class="text-center">Identification Details</h4>
                    <hr />
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(x => x.MissingModel.HeightUnit, new { @class = "col-sm-4 control-label" })
                            <div class="col-sm-3">
                                @Html.DropDownListFor(x => x.MissingModel.HeightUnit, Model.HeightUnitList, "Select Unit", new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(x => x.MissingModel.HeightUnit, null, new { @class = "text-red" })
                            <div class="col-sm-5">
                                @Html.TextBoxFor(x => x.MissingModel.Hieght, new { @class = "form-control", placeholder = "Height" })
                            </div>
                            @Html.ValidationMessageFor(x => x.MissingModel.Hieght, null, new { @class = "text-red" })
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(x => x.MissingModel.EyeColorId, new { @class = "col-sm-4 control-label" })
                            <div class="col-sm-8">
                                @Html.DropDownListFor(x => x.MissingModel.EyeColorId, Model.ColourList, "Select Color", new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(x => x.MissingModel.EyeColorId, null, new { @class = "text-red" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(x => x.MissingModel.Build, new { @class = "col-sm-4 control-label" })
                            <div class="col-sm-8">
                                @Html.TextBoxFor(x => x.MissingModel.Build, new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(x => x.MissingModel.Build, null, new { @class = "text-red" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(x => x.MissingModel.ClothesWorn, new { @class = "col-sm-4 control-label" })
                            <div class="col-sm-8">
                                @Html.TextBoxFor(x => x.MissingModel.ClothesWorn, new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(x => x.MissingModel.ClothesWorn, null, new { @class = "text-red" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(x => x.MissingModel.SpecialIdentifier, new { @class = "col-sm-4 control-label" })
                            <div class="col-sm-8">
                                @Html.TextAreaFor(x => x.MissingModel.SpecialIdentifier, new { @class = "textarea", style = "width: 100%; height: 200px; font-size: 14px; line-height: 18px; border: 1px solid #dddddd; padding: 10px;" })
                            </div>
                            @Html.ValidationMessageFor(x => x.MissingModel.SpecialIdentifier, null, new { @class = "text-red" })
                        </div>
                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(x => x.MissingModel.Weight, new { @class = "col-sm-4 control-label" })
                            <div class="col-sm-8">
                                @Html.TextBoxFor(x => x.MissingModel.Weight, new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(x => x.MissingModel.Weight, null, new { @class = "text-red" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(x => x.MissingModel.HairColorId, new { @class = "col-sm-4 control-label" })
                            <div class="col-sm-8">
                                @Html.DropDownListFor(x => x.MissingModel.HairColorId, Model.ColourList, "Select Color", new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(x => x.MissingModel.HairColorId, null, new { @class = "text-red" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(x => x.MissingModel.Language, new { @class = "col-sm-4 control-label" })
                            <div class="col-sm-8">
                                @Html.TextBoxFor(x => x.MissingModel.Language, new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(x => x.MissingModel.Language, null, new { @class = "text-red" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(x => x.MissingModel.Photo, new { @class = "col-sm-4 control-label" })
                            <div class="col-sm-8">
                                <input type="file" name="file" id="file" />
                                <p class="help-block">Upload Image Files only for eg. <i>Jpeg,Jpg,PNG</i></p>
                                @if (true)
                                {
                                    <img src="" class="img-thumbnail" style="width:50px" />
                                }
                            </div>
                            @Html.ValidationMessageFor(x => x.MissingModel.Photo, null, new { @class = "text-red" })
                        
                        </div>
                       
                    </div>

                    <hr class="col-md-12" />
                    <h4 class="text-center col-md-12">Additional Files</h4>
                    <hr class="col-md-12"/>

                    <div class="col-md-6">
                        <div class="box">
                            <div class="box-header with-border">
                                <h3 class="box-title">Files </h3>
                            </div>
                            <!-- /.box-header -->
                            <div class="box-body">
                                <table class="table table-bordered">
                                    <tr>
                                        <th style="width: 10px">S.N</th>
                                        <th>@Html.DisplayNameFor(x => x.PhotoList.SingleOrDefault().Detail)</th>
                                        <th>@Html.DisplayNameFor(x => x.PhotoList.SingleOrDefault().Photo)</th>
                                        <th style="width: 40px">Action</th>
                                    </tr>
                                    @foreach (var item in Model.PhotoList)
                                    {
                                        var i = 1;

                                        if (item.IsPhoto == false)
                                        {
                                            <tr>
                                                <td>i</td>
                                                <td>@Html.DisplayFor(x => item.Detail)</td>
                                                <td>
                                                    photos here
                                                </td>
                                                <td>
                                                    <a href="#" class="btn btn-primary del" data-id="@item.Id"><i class="fa fa-trash-o pull-left"></i></a>

                                                </td>
                                            </tr>
                                            i++;
                                        }


                                    }

                                </table>
                            </div>
                            <!-- /.box-body -->

                        </div>
                        <!-- /.box -->
                        <!-- /.box -->
                    </div>

                    <div class="col-md-6">
                    <div class="box">
                        <div class="box-header with-border">
                            <h3 class="box-title">Add Files </h3>
                            <span class="pull-right">
                                <a class="btn btn-primary add" href="Javascript:void(0)"><i class="fa fa-plus"></i> Add New</a>
                            </span>
                        </div>
                        <!-- /.box-header -->
                        <div class="box-body">
                            <table class="table table-bordered uploadTable">

                                <tr>
                       
                                    <th>@Html.DisplayNameFor(x=>x.PhotoList.SingleOrDefault().Detail)</th>
                                    <th>@Html.DisplayNameFor(x=>x.PhotoList.SingleOrDefault().Photo)</th>
                                    <th style="width: 40px">Action</th>
                                </tr>
                                
                                
                                
                            </table>
                        </div>
                        <!-- /.box-body -->
                     
                    </div>
                    <!-- /.box -->
                    
                    <!-- /.box -->
                </div>
                    <hr class="col-md-12" />
                    <h4 class="text-center col-md-12">Permanent Address</h4>
                    <hr class="col-md-12"/>
                    <div class="element-row">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(x => x.MissingModel.PStateId, new { @class = "col-sm-4 control-label" })
                                <div class="col-sm-8">
                                    @Html.DropDownListFor(x => x.MissingModel.PStateId, Model.StateList, "Select State", new { @class = "form-control state" })
                                </div>
                                @Html.ValidationMessageFor(x => x.MissingModel.PStateId, null, new { @class = "text-red" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(x => x.MissingModel.PMunicipalityId, new { @class = "col-sm-4 control-label" })
                                <div class="col-sm-8">
                                    @Html.DropDownListFor(x => x.MissingModel.PMunicipalityId, Model.PMunicipalityList, "Select Municipality", new { @class = "form-control municipality", disabled = "disabled" })
                                </div>
                                @Html.ValidationMessageFor(x => x.MissingModel.PMunicipalityId, null, new { @class = "text-red" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(x => x.MissingModel.PToleName, new { @class = "col-sm-4 control-label" })
                                <div class="col-sm-8">
                                    @Html.TextBoxFor(x => x.MissingModel.PToleName, new { @class = "form-control" })
                                </div>
                                @Html.ValidationMessageFor(x => x.MissingModel.PToleName, null, new { @class = "text-red" })
                            </div>


                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(x => x.MissingModel.PDistrictId, new { @class = "col-sm-4 control-label" })
                                <div class="col-sm-8">
                                    @Html.DropDownListFor(x => x.MissingModel.PDistrictId, Model.PDistrictList, "Select District", new { @class = "form-control district", disabled = "disabled" })
                                </div>
                                @Html.ValidationMessageFor(x => x.MissingModel.PDistrictId, null, new { @class = "text-red" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(x => x.MissingModel.PWardNumber, new { @class = "col-sm-4 control-label" })
                                <div class="col-sm-8">
                                    @Html.TextBoxFor(x => x.MissingModel.PWardNumber, new { @class = "form-control" })
                                </div>
                                @Html.ValidationMessageFor(x => x.MissingModel.PWardNumber, null, new { @class = "text-red" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(x => x.MissingModel.PContactNumber, new { @class = "col-sm-4 control-label" })
                                <div class="col-sm-8">
                                    @Html.TextBoxFor(x => x.MissingModel.PContactNumber, new { @class = "form-control" })
                                </div>
                                @Html.ValidationMessageFor(x => x.MissingModel.PContactNumber, null, new { @class = "text-red" })
                            </div>
                        </div>
                    </div>
                    <hr class="col-md-12" />
                    <h4 class="text-center col-md-12">Temporary Address</h4>
                    <hr class="col-md-12" />
                    <div class="element-row">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(x => x.MissingModel.TStateId, new { @class = "col-sm-4 control-label" })
                                <div class="col-sm-8">
                                    @Html.DropDownListFor(x => x.MissingModel.TStateId, Model.StateList, "Select State", new { @class = "form-control state" })
                                </div>
                                @Html.ValidationMessageFor(x => x.MissingModel.TStateId, null, new { @class = "text-red" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(x => x.MissingModel.TMunicipalityId, new { @class = "col-sm-4 control-label" })
                                <div class="col-sm-8">
                                    @Html.DropDownListFor(x => x.MissingModel.TMunicipalityId, Model.PMunicipalityList, "Select Municipality", new { @class = "form-control municipality", disabled = "disabled" })
                                </div>
                                @Html.ValidationMessageFor(x => x.MissingModel.TMunicipalityId, null, new { @class = "text-red" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(x => x.MissingModel.TToleName, new { @class = "col-sm-4 control-label" })
                                <div class="col-sm-8">
                                    @Html.TextBoxFor(x => x.MissingModel.TToleName, new { @class = "form-control" })
                                </div>
                                @Html.ValidationMessageFor(x => x.MissingModel.TToleName, null, new { @class = "text-red" })
                            </div>


                        </div>
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(x => x.MissingModel.TDistrictId, new { @class = "col-sm-4 control-label" })
                                <div class="col-sm-8">
                                    @Html.DropDownListFor(x => x.MissingModel.TDistrictId, Model.PDistrictList, "Select District", new { @class = "form-control district", disabled = "disabled" })
                                </div>
                                @Html.ValidationMessageFor(x => x.MissingModel.TDistrictId, null, new { @class = "text-red" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(x => x.MissingModel.TWardNumber, new { @class = "col-sm-4 control-label" })
                                <div class="col-sm-8">
                                    @Html.TextBoxFor(x => x.MissingModel.TWardNumber, new { @class = "form-control" })
                                </div>
                                @Html.ValidationMessageFor(x => x.MissingModel.TWardNumber, null, new { @class = "text-red" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(x => x.MissingModel.TContactNumber, new { @class = "col-sm-4 control-label" })
                                <div class="col-sm-8">
                                    @Html.TextBoxFor(x => x.MissingModel.TContactNumber, new { @class = "form-control" })
                                </div>
                                @Html.ValidationMessageFor(x => x.MissingModel.TContactNumber, null, new { @class = "text-red" })
                            </div>
                        </div>
                    </div>
                    <hr class="col-md-12" />
                    <h4 class="text-center col-md-12">Missing Address</h4>
                    <hr class="col-md-12" />
                    <div class="element-row">
                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(x => x.MissingModel.MStateId, new { @class = "col-sm-4 control-label" })
                                <div class="col-sm-8">
                                    @Html.DropDownListFor(x => x.MissingModel.MStateId, Model.StateList, "Select State", new { @class = "form-control state" })
                                </div>
                                @Html.ValidationMessageFor(x => x.MissingModel.MStateId, null, new { @class = "text-red" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(x => x.MissingModel.MMunicipalityId, new { @class = "col-sm-4 control-label" })
                                <div class="col-sm-8">
                                    @Html.DropDownListFor(x => x.MissingModel.MMunicipalityId, Model.MMunicipalityList, "Select Municipality", new { @class = "form-control municipality", disabled = "disabled" })
                                </div>
                                @Html.ValidationMessageFor(x => x.MissingModel.MMunicipalityId, null, new { @class = "text-red" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(x => x.MissingModel.MToleName, new { @class = "col-sm-4 control-label" })
                                <div class="col-sm-8">
                                    @Html.TextBoxFor(x => x.MissingModel.MToleName, new { @class = "form-control" })
                                </div>
                                @Html.ValidationMessageFor(x => x.MissingModel.MToleName, null, new { @class = "text-red" })
                            </div>
                            <div class="bootstrap-timepicker">
                                <div class="form-group">
                                    @Html.LabelFor(x => x.MissingModel.LastSeenTime, new { @class = "col-sm-4 control-label" })
                                    <div class="col-sm-8">
                                        <div class="input-group">

                                            @Html.TextBoxFor(x => x.MissingModel.LastSeenTime, new { @class = "form-control timepicker" })
                                            <div class="input-group-addon">
                                                <i class="fa fa-clock-o"></i>
                                            </div>
                                        </div>
                                    </div>
                                    @Html.ValidationMessageFor(x => x.MissingModel.LastSeenTime, null, new { @class = "text-red" })


                                </div>
                            </div>
                            <!-- /.form group -->
                        </div>


                        <div class="col-md-6">
                            <div class="form-group">
                                @Html.LabelFor(x => x.MissingModel.MDistrictId, new { @class = "col-sm-4 control-label" })
                                <div class="col-sm-8">
                                    @Html.DropDownListFor(x => x.MissingModel.MDistrictId, Model.MDistrictList, "Select District", new { @class = "form-control district", disabled = "disabled" })
                                </div>
                                @Html.ValidationMessageFor(x => x.MissingModel.MDistrictId, null, new { @class = "text-red" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(x => x.MissingModel.MWardNumber, new { @class = "col-sm-4 control-label" })
                                <div class="col-sm-8">
                                    @Html.TextBoxFor(x => x.MissingModel.MWardNumber, new { @class = "form-control" })
                                </div>
                                @Html.ValidationMessageFor(x => x.MissingModel.MWardNumber, null, new { @class = "text-red" })
                            </div>
                            <div class="form-group">

                                @Html.LabelFor(x => x.MissingModel.LastSeenDate, new { @class = "col-sm-4 control-label" })
                                <div class="col-sm-8">
                                <div class="input-group date">
                                    <div class="input-group-addon">
                                        <i class="fa fa-calendar"></i>
                                    </div>
                                    @Html.TextBoxFor(x => x.MissingModel.LastSeenDate, new { @class = "form-control pull-right datepicker" })


                                </div>
                                </div>
                                @Html.ValidationMessageFor(x => x.MissingModel.LastSeenDate, null, new { @class = "text-red" })
                      
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(x => x.MissingModel.LastSeenPlace, new { @class = "col-sm-4 control-label" })
                                <div class="col-sm-8">
                                    @Html.TextBoxFor(x => x.MissingModel.LastSeenPlace, new { @class = "form-control" })
                                </div>
                                @Html.ValidationMessageFor(x => x.MissingModel.LastSeenPlace, null, new { @class = "text-red" })
                            </div>

                        </div>
                    </div>
                    <hr class="col-md-12" />
                    <h4 class="text-center col-md-12">Complaint Information</h4>
                    <hr class="col-md-12" />
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(x => x.MissingModel.ComplainByName, new { @class = "col-sm-4 control-label" })
                            <div class="col-sm-8">
                                @Html.TextBoxFor(x => x.MissingModel.ComplainByName, new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(x => x.MissingModel.ComplainByName, null, new { @class = "text-red" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(x => x.MissingModel.ComplainContactNumber, new { @class = "col-sm-4 control-label" })
                            <div class="col-sm-8">
                                @Html.TextBoxFor(x => x.MissingModel.ComplainContactNumber, new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(x => x.MissingModel.ComplainContactNumber, null, new { @class = "text-red" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(x => x.MissingModel.PossiblePlaces, new { @class = "col-sm-4 control-label" })
                            <div class="col-sm-8">
                                @Html.TextBoxFor(x => x.MissingModel.PossiblePlaces, new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(x => x.MissingModel.PossiblePlaces, null, new { @class = "text-red" })
                        </div>
                        <div class="form-group">

                            @Html.LabelFor(x => x.MissingModel.ComplainDate, new { @class = "col-sm-4 control-label" })
                            <div class="col-sm-8">
                                <div class="input-group date">
                                    <div class="input-group-addon">
                                        <i class="fa fa-calendar"></i>
                                    </div>
                                    @Html.TextBoxFor(x => x.MissingModel.ComplainDate, new { @class = "form-control pull-right datepicker" })


                                </div>
                            </div>
                            @Html.ValidationMessageFor(x => x.MissingModel.ComplainDate, null, new { @class = "text-red" })

                        </div>

                    </div>
                    <div class="col-md-6">
                        <div class="form-group">
                            @Html.LabelFor(x => x.MissingModel.RelationWithVictim, new { @class = "col-sm-4 control-label" })
                            <div class="col-sm-8">
                                @Html.TextBoxFor(x => x.MissingModel.RelationWithVictim, new { @class = "form-control" })
                            </div>
                            @Html.ValidationMessageFor(x => x.MissingModel.RelationWithVictim, null, new { @class = "text-red" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(x => x.MissingModel.OfficeId, new { @class = "col-sm-4 control-label" })
                            <div class="col-sm-8">
                                @Html.DropDownListFor(x => x.MissingModel.OfficeId, Model.OfficeList, "--Select Office--", new { @class = "form-control"})
                            </div>
                            @Html.ValidationMessageFor(x => x.MissingModel.OfficeId, null, new { @class = "text-red" })
                        </div>
                        <div class="form-group">
                            @Html.LabelFor(x => x.MissingModel.MissingReason, new { @class = "col-sm-4 control-label" })
                            <div class="col-sm-8">
                                @Html.TextAreaFor(x => x.MissingModel.MissingReason, new { @class = "textarea", style = "width: 100%; height: 200px; font-size: 14px; line-height: 18px; border: 1px solid #dddddd; padding: 10px;" })
                            </div>
                            @Html.ValidationMessageFor(x => x.MissingModel.MissingReason, null, new { @class = "text-red" })
                        </div>
                    </div>


                </div>
        <!-- /.box-body -->
                <div class="box-footer">
                    <button type="submit" class="btn btn-default">Cancel</button>
                    <button type="submit" class="btn btn-info pull-right">Sign in</button>
                </div>
        <!-- /.box-footer -->
            }
        </div>
        <!-- /.box -->
        <!-- general form elements disabled -->
    </div>
</div>

@section scripts{
    
    <script type="text/javascript">

        $(document).ready(function () {

            $(".add").click(function() {

                $(".uploadTable tr:last").after("<tr> <td><input type='text' name='detail' value='' class='form-control'/> </td><td><input type='file' name='files' id='file'/> </td><td> <a href='Javascript:void(0)' class='btn btn-primary delI' ><i class='fa fa-trash-o pull-left'></i></a></td> </tr> ");

            });

            //$(".delI").click(function (e) {

               
                
            //});

            $(document).on("click", ".delI", function (e) {

                $(e.target).parents("tr").fadeOut(function () {

                    $(this).remove();
                });
            });


            $(".state").each(function () {

                $(this).change(function () {

                    var selectedState = $(this).find(":selected").val();

                    var districtSelect = $(this).closest(".element-row").find(".district");

                    districtSelect.removeAttr("disabled");

                    districtSelect.empty();

                    if (selectedState != null && selectedState != 0) {

                        $.ajax({
                            url: "/api/dropdownlist/getdistrict/" + selectedState,
                            method: "GET",
                            success: function (districts) {
                                if (districts != null && !jQuery.isEmptyObject(districts)) {

                                    districtSelect.append($('<option/>', {
                                        value: null,
                                        text: ""
                                    }));

                                    $.each(districts, function (index, district) {

                                        districtSelect.append($('<option/>', {

                                            value: district.Value,
                                            text: district.Text
                                        }));
                                    });
                                }
                            }
                        });
                    }
                });

            });

            $(".district").each(function () {

                $(this).change(function () {

                    var selectedDistrict = $(this).find(":selected").val();

                    var municipalitySelect = $(this).closest(".element-row").find(".municipality");

                    municipalitySelect.removeAttr("disabled");

                    municipalitySelect.empty();

                    if (selectedDistrict != null && selectedDistrict != 0) {

                        $.ajax({
                            url: "/api/dropdownlist/getmunicipality/" + selectedDistrict,
                            method: "GET",
                            success: function (municipalities) {
                                if (municipalities != null && !jQuery.isEmptyObject(municipalities)) {

                                    municipalitySelect.append($('<option/>', {
                                        value: null,
                                        text: ""
                                    }));

                                    $.each(municipalities, function (index, municipality) {

                                        municipalitySelect.append($('<option/>', {

                                            value: municipality.Value,
                                            text: municipality.Text
                                        }));
                                    });
                                }
                            }
                        });
                    }
                });

            });
            
        });

    </script>
    
    }