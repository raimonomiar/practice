@model MissingUnApproveViewModel
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}




<div class="col-md-12">
    <div class="box box-info">
        <div class="box-header with-border">
            <h3 class="box-title">User Management</h3>
        </div>
        <!-- /.box-header -->
        <!-- form start -->

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()
            <div class="box-body">
                <div class="col-md-6">
                    <div class="form-group">
                        @Html.LabelFor(x => x.MissingModel.RegistrationNumber, new { @class = "control-label" })

                        @Html.EditorFor(x => x.MissingModel.RegistrationNumber, new { htmlAttributes = new { @class = "form-control" } })

                        @Html.ValidationMessageFor(x => x.MissingModel.RegistrationNumber, null, new { @class = "text-red" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(x => x.MissingModel.Fname, new { @class = "control-label" })

                        @Html.TextBoxFor(x => x.MissingModel.Fname, new { @class = "form-control" })

                        @Html.ValidationMessageFor(x => x.MissingModel.Fname, null, new { @class = "text-red" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(x => x.MissingModel.Lname, new { @class = "control-label" })

                        @Html.TextBoxFor(x => x.MissingModel.Lname, new { @class = "form-control" })

                        @Html.ValidationMessageFor(x => x.MissingModel.Lname, null, new { @class = "text-red" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(x => x.MissingModel.DOB, new { @class = "control-label" })

                        @Html.TextBoxFor(x => x.MissingModel.DOB, new { @class = "form-control pull-right", id = "datepicker" })

                        @Html.ValidationMessageFor(x => x.MissingModel.DOB, null, new { @class = "text-red" })
                    </div>


                    @*<div class="form-group">
                            @Html.LabelFor(x => x.MissingModel.OfficeId, new { @class = "control-label" })

                            @Html.DropDownListFor(x => x.MissingModel.OfficeId, Model.OfficeList, "---Select Office---", htmlAttributes: new { @class = "form-control" })

                            @Html.ValidationMessageFor(x => x.MissingModel.OfficeId, null, new { @class = "text-red" })
                        </div>*@
                </div>

                <div class="col-md-6">

                    <div class="form-group">
                        @Html.LabelFor(x => x.MissingModel.FiscalYearId, new { @class = "control-label" })

                        @Html.DropDownListFor(x => x.MissingModel.FiscalYearId, Model.FiscalYearList, "---Select Fiscal Year---", htmlAttributes: new { @class = "form-control" })

                        @Html.ValidationMessageFor(x => x.MissingModel.FiscalYearId, null, new { @class = "text-red" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(x => x.MissingModel.Alias, new { @class = "control-label" })

                        @Html.TextBoxFor(x => x.MissingModel.Alias, new { @class = "form-control" })

                        @Html.ValidationMessageFor(x => x.MissingModel.Alias, null, new { @class = "text-red" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(x => x.MissingModel.Gender, new { @class = "control-label" })

                        @Html.DropDownListFor(x => x.MissingModel.Gender, Model.GenderList, "---Select Gender--", new { @class = "form-control" })

                        @Html.ValidationMessageFor(x => x.MissingModel.Gender, null, new { @class = "text-red" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(x => x.MissingModel.MotherName, new { @class = "control-label" })

                        @Html.TextBoxFor(x => x.MissingModel.MotherName, new { @class = "form-control" })

                        @Html.ValidationMessageFor(x => x.MissingModel.MotherName, null, new { @class = "text-red" })
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(x => x.MissingModel.FatherName, new { @class = "control-label" })

                        @Html.TextBoxFor(x => x.MissingModel.FatherName, new { @class = "form-control" })

                        @Html.ValidationMessageFor(x => x.MissingModel.FatherName, null, new { @class = "text-red" })
                    </div>

                </div>
            </div>



            <div class="box-footer">
                <a href="@Url.Action("Index","Role")" class="btn btn-default">Cancel</a>
                <button type="submit" class="btn btn-info pull-right">Create</button>
            </div>
            if(Model.IsMatches)
            {
                <div class="box-footer">
                    Found similiar records that matches to your data. Are you sure you want to continue?
                    <button type="submit" class="btn btn-primary" name="yes" value="yes">Yes</button>
                </div>
            }


        }
    </div>

    @*Similiar Missing List*@
    @{
        if (Model.MissingCount > 0)
        {
            <div class="box box-info">
                <div class="box-header with-border">
                    <h3 class="box-title">Missing Similar</h3>
                </div>


                <div class="box-body">
                    <table class="table table-bordered">
                        <tr>
                            <th style="width: 10px">S.N.</th>
                            <th>@Html.DisplayNameFor(x => x.MissingModel.Fname)</th>
                            <th>@Html.DisplayNameFor(x => x.MissingModel.Lname)</th>
                            <th>@Html.DisplayNameFor(x => x.MissingModel.Photo)</th>
                            <th>@Html.DisplayNameFor(x => x.MissingModel.ComplainByName)</th>
                            <th>@Html.DisplayNameFor(x => x.MissingModel.ComplainDate)</th>
                            <th style="width: 250px;">Actions</th>
                        </tr>

                        @foreach (var user in Model.MissingModelList)
                        {
                            var i = 1;
                            <tr>
                                <td>
                                    @Html.DisplayFor(x => i)

                                </td>

                                <td>
                                    @Html.DisplayFor(x => user.Fname)

                                </td>
                                <td>
                                    @Html.DisplayFor(x => user.Lname)
                                </td>
                                <td>
                                    Photo
                                </td>
                                <td>

                                    @if (!string.IsNullOrEmpty(user.ComplainByName))
                                    {
                                        @Html.DisplayFor(x => user.ComplainByName)
                                    }
                                    else
                                    {
                                        <span>Not Assigned</span>
                                    }
                                    @if (user.ComplainDate != null)
                                    {
                                        Html.DisplayFor(x => user.ComplainDate);
                                    }
                                </td>

                                <td>
                                    @Html.DisplayFor(x => user.OfficeName)
                                </td>
                                <td>

                                    <a href="@Url.Action("Detail","MissingUnApprove", new {id = user.UserId})" class="btn btn-primary"><i class="fa fa-eye pull-left"></i></a>

                                </td>
                            </tr>
                            i++;
                        }
                    </table>
                </div>
            </div>
        }
    }


</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}